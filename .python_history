exit
import random
from collections import Counter
Prob = float # The type for a probability, a number between 0 and 1.
def overtime(TD=0.20, FG=0.25, go=0.10, one=0.98, two=0.48, A_extra=1, B_extra=2) -> tuple:
    """Given probabilities, play a random overtime and return (team_A_score, team_B_score).
    Both teams have same probabilities:
    TD:  probability of scoring a touchdown on a 'normal' possession. 
    FG:  probability of scoring a field goal on a 'normal' possession.
    go:  additional probability of scoring a touchdown, if you resolve not to kick.
    one: probability of making a one-point conversion.
    two: probability of making a two-point conversion.
    A_extra: what team A goes for on the extra point.
    B_extra: what team B goes for on the extra point (when behind by 1)."""
    A = B = 0 # The scores of the two teams
    possession = 1 # The number of possessions for each team
    while A == B:
        extra = (0 if possession > 1 else P(one, 1) if A_extra == 1 else P(two, 2))
        A += score(TD, FG, extra)
        if possession == 1 or A == B: # B gets a chance on their first possession, or if it is still tied.
            extra = (0 if B + 6 > A else P(one, 1) if B + 6 == A or (B_extra == 1 and B + 7 == A) else P(two, 2))
            B += (score(TD + go, 0, extra) if A - B > 3 # Must go for TD if behind by more than 3
                  else 
                  score(TD, FG, 0))
        possession += 1
    return A, B
def score(TD: Prob, FG: Prob, extra: int) -> int: 
    """Randomly simulate a score, given probabilities for TD and FG, and given the number of extra points."""
    return P(TD, 6 + extra) or P(FG / (1 - TD), 3)
def P(p: Prob, points: int) -> int: 
    """Return `points` with probability `p`, else 0."""
    return points if random.random() < p else 0
overtime
import random
from collections import Counter
Prob = float # The type for a probability, a number between 0 and 1.
Prob
exit
